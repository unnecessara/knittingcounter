{"version":3,"sources":["logo.svg","CounterForm.js","Counter.js","CounterList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","CounterForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","name","target","value","setState","defineProperty","handleCreate","addCounter","state","steps","notes","react_default","a","createElement","className","onClick","Component","Counter","_ref","counter","remove","addOne","subtractOne","infoChanged","handleInfoChanged","id","type","required","autoComplete","onChange","htmlFor","currentStep","CounterList","counters","allCounters","length","map","src_Counter_0","key","App","updateLocalStorage","Storage","localStorage","JSON","stringify","fields","Number","count","window","concat","removeCounter","newList","filter","handleAddOne","toConsumableArray","index","findIndex","c","handleSubtractOne","handleInfoChange","componentDidMount","clear","console","log","localData","parse","src","logo","alt","src_CounterList_0","src_CounterForm_0","App_QuoteGenerator","QuoteGenerator","quoteList","Math","floor","random","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.09d2d8da.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.0cfb6f16.svg\";","import React, { Component } from 'react';\nimport './CounterForm.css';\n\n/// You are redoing this so that this is a controlled component and each one of the input fields should call a handler to update state?\n// do more research\n\n\nclass CounterForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tname: '',\n\t\t\tsteps: '',\n\t\t\tnotes: '',\n\t\t};\n\t}\n\t\n\thandleChange = (event) => {\n\t\tconst name = event.target.name;\n\t\tconst value = event.target.value;\n\t\tthis.setState({\n\t\t\t[name]: value\n\t\t});\n\t}\n\n\thandleCreate = (event) => {\n\t\t// Need validation \n\t\tthis.props.addCounter(this.state);\n\t\tthis.setState({\n\t\t\tname: '',\n\t\t\tsteps: '',\n\t\t\tnotes: ''\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"new-btn\"\n\t\t\t\t\t\tonClick={this.handleCreate}\n\t\t\t\t\t>\n\t\t\t\t\t\t<i className=\"fas fa-plus\" />\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t{/* <div>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tName:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tTotal Steps:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tname=\"steps\"\n\t\t\t\t\t\t\tvalue={this.state.steps}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tNotes:\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"notes\"\n\t\t\t\t\t\t\tvalue={this.state.notes}\n\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t<button onClick={this.handleCreate}>Create</button>\n\t\t\t\t</div> */}\n\t\t\t</div>\n\t\t);\n\t}\n};\n\n\nexport default CounterForm;","import React from 'react';\nimport './Counter.css';\n\nconst Counter = ({ counter, remove, addOne, subtractOne, infoChanged }) => {\n\n\tconst handleInfoChanged = (event) => {\n\t\tinfoChanged(counter.id, event.target.name, event.target.value);\n\t};\n\n\treturn (\n\t\t<div className=\"counter\">\n\t\t\t<div className=\"info\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tclassName=\"question\"\n\t\t\t\t\tid=\"nme\"\n\t\t\t\t\trequired\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tvalue={counter.name}\n\t\t\t\t\tonChange={handleInfoChanged}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"nme\">\n\t\t\t\t\t<span>name</span>\n\t\t\t\t</label>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"numbers\"\n\t\t\t\t\tname=\"steps\"\n\t\t\t\t\tclassName=\"question\"\n\t\t\t\t\tid=\"stps\"\n\t\t\t\t\trequired\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tvalue={counter.steps}\n\t\t\t\t\tonChange={handleInfoChanged}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"stps\">\n\t\t\t\t\t<span>Steps</span>\n\t\t\t\t</label>\n\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"notes\"\n\t\t\t\t\tclassName=\"question\"\n\t\t\t\t\tid=\"nts\"\n\t\t\t\t\trequired\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\tvalue={counter.notes}\n\t\t\t\t\tonChange={handleInfoChanged}\n\t\t\t\t/>\n\t\t\t\t<label htmlFor=\"nts\">\n\t\t\t\t\t<span>Note</span>\n\t\t\t\t</label>\n\t\t\t</div>\n\n\t\t\t<div className=\"controls\">\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"arrow-control control-up\"\n\t\t\t\t\tonClick={() => addOne(counter.id)}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"fas fa-sort-up\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"current-count\">{counter.currentStep}</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"arrow-control control-down\"\n\t\t\t\t\tonClick={() => subtractOne(counter.id)}\n\t\t\t\t>\n\t\t\t\t\t<i className=\"fas fa-sort-down\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"removeBtn\" onClick={() => remove(counter.id)}>\n\t\t\t\tX\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Counter;\n","import React from 'react';\nimport Counter from './Counter.js'\nimport './CounterList.css'\n\nconst CounterList = ({ counters, remove, addOne, subtractOne, infoChanged }) => {\n\tlet allCounters = [];\n    if (counters.length > 0) {\n        allCounters = counters.map(counter => {\n            return <Counter key={counter.id} counter={counter} remove={remove} addOne={addOne} subtractOne={subtractOne} infoChanged={infoChanged} />;\n        });\n        return (\n\t\t\t<div className=\"counters-list\">\n\t\t\t\t{allCounters}\n\t\t\t</div>\n\t\t);\n    }\n    return (\n        <div key=\"-1\" className=\"empty-list-banner\">\n            You have no counters, start one!\n        </div>\n    );\n};\n\nexport default CounterList;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport CounterForm from './CounterForm.js';\nimport CounterList from './CounterList.js';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tconst localData = localStorage.counters && JSON.parse(localStorage.counters);\n\n\t\tthis.state = {\n\t\t\tcounters: localData || \n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tid: -1,\n\t\t\t\t\tname: 'Example Sleeve Counter',\n\t\t\t\t\tsteps: 10,\n                    notes: 'K14, SL2, P6',\n                    currentStep: 0,\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n\n\tupdateLocalStorage = () => {\n\t\tif (typeof Storage !== 'undefined') {\n\t\t\tlocalStorage.counters = JSON.stringify(this.state.counters);\n\t\t}\n\t}\n\n\taddCounter = fields => {\n\t\tlet id;\n\t\t// Use local storage count or window's object id + 1\n\t\tif (typeof Storage !== 'undefined') {\n\t\t\tid = Number(localStorage.count);\n\t\t\tlocalStorage.count = Number(localStorage.count) + 1;\n\t\t} else {\n\t\t\tid = window.id++;\n\t\t}\n\n\t\tconst counter = {\n\t\t\tname: fields.name,\n\t\t\tsteps: fields.steps,\n\t\t\tnotes: fields.notes,\n            id: id,\n            currentStep: 0,\n\t\t};\n\n\t\tthis.setState(state => {\n\t\t\treturn { counters: this.state.counters.concat(counter) };\n\t\t},\n\t\t()=> {\n\t\t\tthis.updateLocalStorage();\n\t\t});\n\t}\n\n\tremoveCounter = id => {\n\t\tconst newList = this.state.counters.filter(counter => counter.id !== id);\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcounters: newList\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.updateLocalStorage();\n\t\t\t}\n\t\t);\n\t}\n\n\thandleAddOne = id => {\n\t\tconst newList = [...this.state.counters];\n\t\tconst index = newList.findIndex(c => c.id === id);\n\t\tif (newList[index].currentStep < newList[index].steps) {\n\t\t\tnewList[index].currentStep += 1;\n\t\t};\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\tcounters: newList\n\t\t\t},\n\t\t\t()=> {\n\t\t\t\tthis.updateLocalStorage();\n\t\t\t}\n\t\t);\n    }\n\n\thandleSubtractOne = id => {\n\t\tconst newList = [...this.state.counters];\n\t\tconst index = newList.findIndex(c => c.id === id);\n\t\tif (newList[index].currentStep > 0) {\n\t\t\tnewList[index].currentStep -= 1;\n\t\t};\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcounters: newList\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.updateLocalStorage();\n\t\t\t}\n\t\t);\n\t}\n\t\n\thandleInfoChange = (id, key, value) => {\n\t\tconst newList = [...this.state.counters];\n\t\tconst index = newList.findIndex(c => c.id === id);\n\t\tnewList[index][key] = value;\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tcounters: newList\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.updateLocalStorage();\n\t\t\t}\n\t\t);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tlocalStorage.clear();\n\t\tif (typeof(Storage) !== \"undefined\") {\n\t\t    if(!localStorage.counters) {\n\t\t        localStorage.counters = JSON.stringify(this.state.counters);\n\t\t    }\n\t\t    if(!localStorage.count) {\n\t\t        localStorage.count = 0;\n\t\t    }\n\t\t} else {\n\t\t    console.log(\"Local storage not available, no counters will be remembered\");\n\t\t\twindow.id = 0;\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<div className=\"main-content\">\n\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc={logo}\n\t\t\t\t\t\t\tclassName=\"App-logo\"\n\t\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</header>\n\t\t\t\t\t<section className=\"counters\">\n\t\t\t\t\t\t<CounterList\n\t\t\t\t\t\t\tcounters={this.state.counters}\n\t\t\t\t\t\t\tremove={this.removeCounter}\n\t\t\t\t\t\t\taddOne={this.handleAddOne}\n\t\t\t\t\t\t\tsubtractOne={this.handleSubtractOne}\n\t\t\t\t\t\t\tinfoChanged={this.handleInfoChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"counter-forms\">\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<CounterForm addCounter={this.addCounter} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</section>\n\t\t\t\t\t<section className=\"footer\">\n\t\t\t\t\t\t<QuoteGenerator></QuoteGenerator>\n\t\t\t\t\t</section>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst QuoteGenerator = () => {\n\tlet quoteList = [\n\t\t'“There is practically no activity that cannot be enhanced or replaced by knitting, if you really want to get obsessive about it.\" -Stephanie McPhee',\n\t\t'\"There is no wrong way to knit. ... We should all agree to stop correcting each other and deal with the more important issue. How wrong crochet is.\" - Stephanie McPhee',\n\t\t'“I will always buy extra yarn. I will not try to tempt fate.” -Stephanie McPhee',\n\t\t'“it is pure potential. Every ball or skein of yarn holds something inside it, and the great mystery of what that might be can be almost spiritual” -Stephanie McPhee'\n\t];\n\treturn (\n\t\t<div>{quoteList[Math.floor(Math.random() * Math.floor(quoteList.length-1))]}</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'normalize.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nif (module.hot) {\n    module.hot.accept();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}